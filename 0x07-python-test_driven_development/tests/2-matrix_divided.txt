Using ``matrix_divided``

------------------------------------------

matrix_divided execpts a list of integers or floats, and a number to divide
each element of the list:
matrix must be a list of lists of integers or floats, otherwise raise a TypeError
Each row of the matrix must be of the same size, otherwise raise a TypeError
div must be a number (integer or float), otherwise raise a TypeError exception
div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError exception
All elements of the matrix should be divided by div, rounded to 2 decimal places
Returns a new matrix

------------------------------------------

Usage:
======

Import the ``matrix_divided`` from ``2-matrix_divided``
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided


Dividing with integers:
    >>> matrix= [[2, 4, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 2)
    [[1.0, 2.0, 3.0], [3.5, 4.0, 4.5]]

Dividing with floats:
    >>> matrix= [[2.3, 4.7], [3.3, 5.5]]
    >>> matrix_divided(matrix, 2.3)
    [[1.0, 2.04], [1.43, 2.39]]

Dividing with both integers and floats:
    >>> matrix= [[1.9876, 2.234, 3], [4.5678, 5.7654, 6]]
    >>> matrix_divided(matrix, 1)
    [[1.99, 2.23, 3.0], [4.57, 5.77, 6.0]]


test if matrix is empty then raise an TypeError::
    >>> matrix= []
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


test if matrix is not of type list then raise an TypeError:
    >>> matrix = 'a'
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


test if elements of matrix are not of type int or float then raise an TypeError:
    >>> matrix= [[1, 2, 3], [4, 5, '6']]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


test if lists of matrix are of the same size if not raise an TypeError::
    >>> matrix = [[1, 2, 3], [3, 4]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size


test if div is a number (integer or float) if not raise an TypeError::
    >>> matrix_divided(matrix, 'a')
    Traceback (most recent call last):
    TypeError: div must be a number


test if div is not a zero (integer or float) if not raise an TypeError:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
